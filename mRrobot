#!/usr/bin/env pybricks-micropython
from PID import PIDController
from drivebase import Drivebase
from time import ticks_ms
from odometry import Odometry

class MrRobot:
    def __init__(self, drivebase, odometry) -> None:
        self.drivebase = drivebase
        self.odometry = odometry
    def PIDDrive(self, speed, distance, setPoint):
        pid = PIDController(3, 0, 0, setPoint)
        self.drivebase.resetDistance()

        while self.drivebase.getDistance() < distance:
            current_angle = self.drivebase.getGyro()

            error = setPoint - current_angle
            if error < -180: error += 360
            elif error > 180: error -= 360

            correction = pid.correction(current_angle)
            print(correction, current_angle)
            self.drivebase.run_tank(speed - correction, speed + correction)


        

    def PIDTurn(self, turn, speed):
        pid = PIDController(4.5, 0.09, 1)
        initial_time = ticks_ms()
        timeout = 6000

        while (ticks_ms() - initial_time) < timeout:
            current_angle = self.drivebase.getGyro()
            error = turn - current_angle

            if error < -180:
                error += 360
            elif error > 180:
                error -= 360

            correction = pid.correction(error)
            self.drivebase.run_tank(correction + speed, -correction - speed)  # Исправлено использование класса
        self.drivebase.run_tank(0, 0)
